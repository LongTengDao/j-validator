{
	"version":
		3,
	"file":
		"j-validator.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","export.ts"],
	"sourcesContent":
		[
			"export default '1.0.0';",
			"import version from './version?text';\nexport { version };\n\nimport isArray from '.Array.isArray?=';\nimport Object_is from '.Object.is';\nimport INFINITY from '.Infinity';\nimport getOwnPropertySymbols from '.Object.getOwnPropertySymbols';\nimport create from '.Object.create?=';\nimport hasOwnProperty from '.Object.prototype.hasOwnProperty';\nimport apply from '.Reflect.apply?=';\nimport TypeError from '.TypeError';\nimport UNDEFINED from '.undefined';\nimport freeze from '.Object.freeze';\n\nvar VOID = freeze ? /*#__PURE__*/ freeze(function VOID () {}) : function VOID () {};\nexport { VOID as void };\n\nexport function any (value :any) :boolean { return value!==VOID; }\nexport function never (value :any) :boolean { return false; }\n\nexport function bigint (value :any) :boolean { return typeof value==='bigint'; }\nexport function symbol (value :any) :boolean { return typeof value==='symbol'; }\nexport function string (value :any) :boolean { return typeof value==='string'; }\nexport function boolean (value :any) :boolean { return typeof value==='boolean'; }\nexport function number (value :any) :boolean { return typeof value==='number'; }\nexport function undefined (value :any) :boolean { return value===UNDEFINED; }\n\nfunction NULL (value :any) :boolean { return value===null; }\nfunction TRUE (value :any) :boolean { return value===true; }\nfunction FALSE (value :any) :boolean { return value===false; }\n\nexport function NaN (value :any) :boolean { return value!==value; }\n\nexport var Infinity :Validator =\n\t/*#__PURE__*/\n\tfunction () :Validator {\n\t\tfunction Infinity (value :any) :boolean { return value===INFINITY; }\n\t\tInfinity.valueOf = function (this :typeof Infinity) :number { return INFINITY; };\n\t\tfreeze && freeze(Infinity);\n\t\treturn Infinity;\n\t}();\nfunction _Infinity (value :any) :boolean { return value=== -INFINITY; }\n\nvar O :Validator = Object_is\n\t? function isZero (value :any) :boolean { return Object_is(value, 0); }\n\t: function isZero (value :any) :boolean { return value===0 && 1/value>0; };\nvar _O :Validator = Object_is\n\t? function isZero (value :any) :boolean { return Object_is(value, -0); }\n\t: function isZero (value :any) :boolean { return value===0 && 1/value<0; };\n\nvar EMPTY :any = [];\nfunction ObjectValidator<T extends object> (type :T) :Validator {\n\tvar symbolKeys = getOwnPropertySymbols ? getOwnPropertySymbols(type).reverse() : EMPTY as ( symbol & keyof T )[];\n\tvar length :number = symbolKeys.length;\n\tvar validators :{ [key in keyof T] :Validator } = create(null);\n\tfor ( var stringKey in type ) {\n\t\tif ( hasOwnProperty.call(type, stringKey) ) { validators[stringKey] = Validator(type[stringKey]); }\n\t}\n\tfor ( var index :number = length; index; ) {\n\t\tvar symbolKey = symbolKeys[--index];\n\t\tvalidators[symbolKey] = Validator(type[symbolKey]);\n\t}\n\treturn function object (value :any) :boolean {\n\t\tif ( typeof value!=='object' || !value || isArray(value) ) { return false; }\n\t\tfor ( var stringKey in validators ) {\n\t\t\tif ( !validators[stringKey](stringKey in value ? value[stringKey] : VOID) ) { return false; }\n\t\t}\n\t\tfor ( var index :number = length; index; ) {\n\t\t\tvar symbolKey = symbolKeys[--index];\n\t\t\tif ( !validators[symbolKey](symbolKey in value ? value[symbolKey] : VOID) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nfunction ArrayValidator (type :any[]) :Validator {\n\tvar length :number = type.length;\n\tvar validators :Validator[] = [];\n\tfor ( var index :number = length; index; ) { validators.push(Validator(type[--index])); }\n\treturn function array (value :any) :boolean {\n\t\tif ( !isArray(value) ) { return false; }\n\t\tif ( value.length!==length ) { return false; }\n\t\tfor ( var index :number = length; index; ) {\n\t\t\tif ( !validators[--index](value[index]) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nfunction ArgumentsValidator (type :any[]) :Validator {\n\tvar length :number = type.length;\n\tvar validators :Validator[] = [];\n\tfor ( var index :number = length; index; ) { validators.push(Validator(type[--index])); }\n\treturn function ARGUMENTS (value :any) :boolean {\n\t\tif ( value.length!==length ) { return false; }\n\t\tfor ( var index :number = length; index; ) {\n\t\t\tif ( !validators[--index](value[index]) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport function Validator (type :any) :Validator {\n\treturn typeof type==='function' ? type :\n\t\tundefined(type) ? undefined :\n\t\t\tTRUE(type) ? TRUE : FALSE(type) ? FALSE :\n\t\t\t\tNULL(type) ? NULL :\n\t\t\t\t\ttypeof type==='object' ? /*#__PURE__*/ ( isArray(type) ? ArrayValidator : ObjectValidator )(type) :\n\t\t\t\t\t\tO(type) ? O : _O(type) ? _O :\n\t\t\t\t\t\t\tNaN(type) ? NaN :\n\t\t\t\t\t\t\t\t/*#__PURE__*/ Infinity(type) ? Infinity : _Infinity(type) ? _Infinity :\n\t\t\t\t\t\t\t\tfunction validator (value :any) :boolean { return value===type; };\n}\n\nexport function optional (type :any) :Validator {\n\tvar validator :Validator = Validator(type);\n\treturn function optionalValidator (value :any) :boolean { return value===VOID || validator(value); };\n}\n\nexport function and () :Validator {\n\tvar types = arguments.length===1 && isArray(arguments[0]) ? arguments[0] : arguments;\n\tvar length :number = types.length;\n\tvar validators :Validator[] = [];\n\tfor ( var index :number = 0; index<length; ++index ) { validators.push(Validator(types[index])); }\n\treturn function or (value :any) :boolean {\n\t\tfor ( var index :number = 0; index<length; ++index ) {\n\t\t\tif ( !validators[index](value) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\nexport function or () :Validator {\n\tvar types = arguments.length===1 && isArray(arguments[0]) ? arguments[0] : arguments;\n\tvar length :number = types.length;\n\tvar validators :Validator[] = [];\n\tfor ( var index :number = 0; index<length; ++index ) { validators.push(Validator(types[index])); }\n\treturn function or (value :any) :boolean {\n\t\tfor ( var index :number = 0; index<length; ++index ) {\n\t\t\tif ( validators[index](value) ) { return true; }\n\t\t}\n\t\treturn false;\n\t};\n}\n\nexport function every (type :any) :Validator {\n\tvar validator :Validator = Validator(type);\n\treturn function array (value :any) :boolean {\n\t\tif ( !isArray(value) ) { return false; }\n\t\tfor ( var length :number = value.length, index :number = 0; index<length; ++index ) {\n\t\t\tif ( !validator(value[index]) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport function overload<T extends (...args :any[]) => any> (types :any[], callback :T) :T { return /*#__PURE__*/ Overloaded.apply(null, arguments as any) as T; }\nfunction Overloaded<T extends (...args :any[]) => any> (types :any[], callback :T) :T {\n\tvar validator :Validator = Validator(types);\n\tif ( typeof callback!=='function' ) { throw TypeError(); }\n\tvar validators :Validator[];\n\tvar callbacks :T[];\n\tvar length :number = arguments.length;\n\tif ( length<3 ) { length = 0; }\n\telse {\n\t\tvalidators = [];\n\t\tcallbacks = [];\n\t\tfor ( var index :number = 2; index<length; ) {\n\t\t\tvalidators.push(ArgumentsValidator(arguments[index++]));\n\t\t\tvar cb :T = arguments[index++];\n\t\t\tif ( typeof cb!=='function' ) { throw TypeError(); }\n\t\t\tcallbacks.push(cb);\n\t\t}\n\t\tlength = validators.length;\n\t}\n\treturn function overloaded (this :any) :ReturnType<T> {\n\t\tif ( validator(arguments) ) { return apply(callback, this, arguments); }\n\t\tfor ( var index :number = 0; index<length; ++index ) {\n\t\t\tif ( validators[index](arguments) ) { return apply(callbacks[index], this, arguments); }\n\t\t}\n\t\tthrow TypeError();\n\t} as T;\n}\n\nimport Default from '.default?=';\nexport default Default(Validator, {\n\tValidator: Validator,\n\tand: and, or: or,\n\tbigint: bigint, symbol: symbol, string: string, boolean: boolean, number: number,\n\tundefined: undefined, NaN: NaN, Infinity: Infinity,\n\tevery: every,\n\t'void': VOID, optional: optional,\n\tany: any, never: never,\n\toverload: overload,\n\tversion: version\n});\n\nexport type Validator = (value :any) => boolean;"
		],
	"names":
		["VOID","freeze","undefined","value","UNDEFINED","NULL","TRUE","FALSE","NaN","Infinity","INFINITY","valueOf","_Infinity","O","Object_is","_O","EMPTY","ArgumentsValidator","type","length","validators","index","push","Validator","isArray","ArrayValidator","ObjectValidator","symbolKeys","getOwnPropertySymbols","reverse","create","stringKey","hasOwnProperty","call","symbolKey","Default","and","types","arguments","or","bigint","symbol","string","boolean","number","every","validator","void","optional","any","never","overload","callback","Overloaded","callbacks","TypeError","cb","apply","this","version"],
	"mappings":
		"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"
}