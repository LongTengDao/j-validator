{
	"version":
		3,
	"file":
		"j-validator.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","export.ts"],
	"sourcesContent":
		[
			"export default '2.1.0';",
			"import version from './version?text';\nexport { version };\n\nimport isArray from '.Array.isArray?=';\nimport Object_is from '.Object.is';\nimport INFINITY from '.Infinity';\nimport create from '.Object.create?=';\nimport ownKeys from '.Reflect.ownKeys?=';\nimport apply from '.Reflect.apply?=';\nimport TypeError from '.TypeError';\nimport UNDEFINED from '.undefined';\n\nfunction VOID (value     )          { return value===VOID; }\nexport { VOID as void };\n\nexport function any (value     )          { return value!==VOID; }\nexport function never (value     )          { return false; }\n\nexport function bigint (value     )          { return typeof value==='bigint'; }\nexport function symbol (value     )          { return typeof value==='symbol'; }\nexport function string (value     )          { return typeof value==='string'; }\nexport function boolean (value     )          { return typeof value==='boolean'; }\nexport function number (value     )          { return typeof value==='number'; }\nexport function undefined (value     )          { return value===UNDEFINED; }\n\nfunction NULL (value     )          { return value===null; }\nfunction TRUE (value     )          { return value===true; }\nfunction FALSE (value     )          { return value===false; }\n\nexport function NaN (value     )          { return value!==value; }\n\nexport function Infinity (value     )          { return value===INFINITY; }\nInfinity.valueOf = function (                     )         { return INFINITY; };\nfunction _Infinity (value     )          { return value=== -INFINITY; }\n\nvar O            = Object_is\n\t? function O (value     )          { return Object_is(value, 0); }\n\t: function O (value     )          { return value===0 && 1/value>0; };\nvar _O            = Object_is\n\t? function _O (value     )          { return Object_is(value, -0); }\n\t: function _O (value     )          { return value===0 && 1/value<0; };\n\nfunction ObjectValidator                   (type   , strict         )            {\n\tif ( strict && ( typeof type!=='object' || !type || isArray(type) ) ) { throw TypeError('Validator.strict(type!object)'); }\n\tvar expectKeys = ownKeys(type).reverse();\n\tvar expectLength         = expectKeys.length;\n\tvar validators                                  = create(null);\n\tfor ( var index         = expectLength; index; ) {\n\t\tvar key = expectKeys[--index];\n\t\tvalidators[key] = Validator(type[key]);\n\t}\n\treturn strict\n\t\t? function object (value     )          {\n\t\t\tif ( typeof value!=='object' || !value || isArray(value) ) { return false; }\n\t\t\tvar index         = 0;\n\t\t\tfor ( var keys = ownKeys(value), length         = keys.length; index<length; ++index ) {\n\t\t\t\tif ( !( keys[index] in validators ) ) { return false; }\n\t\t\t}\n\t\t\tfor ( index = expectLength; index; ) {\n\t\t\t\tvar key = expectKeys[--index];\n\t\t\t\tif ( !validators[key](key in value ? value[key] : VOID) ) { return false; }\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t: function object (value     )          {\n\t\t\tif ( typeof value!=='object' || !value || isArray(value) ) { return false; }\n\t\t\tfor ( var index         = expectLength; index; ) {\n\t\t\t\tvar key = expectKeys[--index];\n\t\t\t\tif ( !validators[key](key in value ? value[key] : VOID) ) { return false; }\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n}\n\nfunction ArrayValidator (type       , like         )            {\n\tvar length         = type.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(Validator(type[index])); }\n\treturn like\n\t\t? function arrayLike (value     )          {\n\t\t\tif ( value.length!==length ) { return false; }\n\t\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\t\tif ( !validators[index](value[index]) ) { return false; }\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t: function array (value     )          {\n\t\t\tif ( !isArray(value) ) { return false; }\n\t\t\tif ( value.length!==length ) { return false; }\n\t\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\t\tif ( !validators[index](value[index]) ) { return false; }\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n}\n\nexport function Validator (type     )            {\n\treturn typeof type==='function' ? type :\n\t\tundefined(type) ? undefined :\n\t\t\tTRUE(type) ? TRUE : FALSE(type) ? FALSE :\n\t\t\t\tNULL(type) ? NULL :\n\t\t\t\t\ttypeof type==='object' ? /*#__PURE__*/ ( isArray(type) ? ArrayValidator : ObjectValidator )(type, false) :\n\t\t\t\t\t\tO(type) ? O : _O(type) ? _O :\n\t\t\t\t\t\t\tNaN(type) ? NaN :\n\t\t\t\t\t\t\t\t/*#__PURE__*/ Infinity(type) ? Infinity : _Infinity(type) ? _Infinity :\n\t\t\t\t\t\t\t\tfunction validator (value     )          { return value===type; };\n}\n\nexport function strict (type        )            {\n\treturn /*#__PURE__*/ ObjectValidator(type, true);\n}\n\nexport function optional (type     )            {\n\tvar validator            = Validator(type);\n\treturn function optionalValidator (value     )          { return value===VOID || validator(value); };\n}\n\nexport function or ()            {\n\tvar types = arguments.length===1 && isArray(arguments[0]) ? arguments[0] : arguments;\n\tvar length         = types.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(Validator(types[index])); }\n\treturn function or (value     )          {\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( validators[index](value) ) { return true; }\n\t\t}\n\t\treturn false;\n\t};\n}\nexport function and ()            {\n\tvar types = arguments.length===1 && isArray(arguments[0]) ? arguments[0] : arguments;\n\tvar length         = types.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(Validator(types[index])); }\n\treturn function or (value     )          {\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( !validators[index](value) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport function every (type     )            {\n\tvar validator            = Validator(type);\n\treturn function array (value     )          {\n\t\tif ( !isArray(value) ) { return false; }\n\t\tfor ( var length         = value.length, index         = 0; index<length; ++index ) {\n\t\t\tif ( !validator(value[index]) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nvar comma_repeat                            = ''.repeat\n\t? function comma_repeat (count        )         { return ','.repeat(count); }\n\t: function () {\n\t\tvar commas           = [];\n\t\treturn function comma_repeat (count        )         {\n\t\t\tcommas.length = count+1;\n\t\t\treturn commas.join(',');\n\t\t};\n\t}();\nexport function overload                                    (types       , callback   )    { return /*#__PURE__*/ Overloaded.apply(null, arguments       )     ; }\nfunction Overloaded                                    (types       , callback   )    {\n\tvar validator            = Validator(types);\n\tif ( typeof callback!=='function' ) { throw TypeError('Validator.overload(,callback!function)'); }\n\tvar validators             ;\n\tvar callbacks     ;\n\tvar length         = arguments.length;\n\tvar fallback   ;\n\tif ( length%2 ) {\n\t\tfallback = arguments[--length];\n\t\tif ( typeof fallback!=='function' ) { throw TypeError('Validator.overload('+comma_repeat(length)+'fallback!function)'); }\n\t}\n\tif ( length<3 ) { length = 0; }\n\telse {\n\t\tvalidators = [];\n\t\tcallbacks = [];\n\t\tfor ( var index         = 2; index<length; ++index ) {\n\t\t\tvalidators.push(ArrayValidator(arguments[index], true));\n\t\t\tvar cb    = arguments[++index];\n\t\t\tif ( typeof cb!=='function' ) { throw TypeError('Validator.overload('+comma_repeat(index)+'callback!function)'); }\n\t\t\tcallbacks.push(cb);\n\t\t}\n\t\tlength = validators.length;\n\t}\n\treturn function overloaded (         )                {\n\t\tif ( validator(arguments) ) { return apply(callback, this, arguments); }\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( validators[index](arguments) ) { return apply(callbacks[index], this, arguments); }\n\t\t}\n\t\tif ( fallback ) { return apply(fallback, this, arguments); }\n\t\tthrow TypeError();\n\t}     ;\n}\n\nimport Default from '.default?=';\nexport default Default(Validator, {\n\tValidator: Validator,\n\tand: and, or: or,\n\tbigint: bigint, symbol: symbol, string: string, boolean: boolean, number: number,\n\tundefined: undefined, NaN: NaN, Infinity: Infinity,\n\tevery: every,\n\t'void': VOID, optional: optional, strict: strict,\n\tany: any, never: never,\n\toverload: overload,\n\tversion: version\n});\n\n                                         "
		],
	"names":
		["VOID","value","undefined","UNDEFINED","NULL","TRUE","FALSE","NaN","Infinity","INFINITY","_Infinity","valueOf","O","Object_is","_O","ObjectValidator","type","strict","isArray","TypeError","expectKeys","ownKeys","reverse","expectLength","length","validators","create","index","key","Validator","keys","ArrayValidator","like","push","commas","comma_repeat","repeat","count","join","Default","and","types","arguments","or","bigint","symbol","string","boolean","number","every","validator","void","optional","any","never","overload","callback","Overloaded","callbacks","fallback","cb","apply","this","version"],
	"mappings":
		"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"
}