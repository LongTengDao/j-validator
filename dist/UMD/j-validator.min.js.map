{
	"version":
		3,
	"file":
		"j-validator.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","export.ts"],
	"sourcesContent":
		[
			"export default '5.0.0';",
			"import version from './version?text';\nexport { version };\n\nimport isArray from '.Array.isArray?=';\nimport Object from '.Object';\nimport INFINITY from '.Infinity';\nimport create from '.Object.create?=';\nimport ownKeys from '.Reflect.ownKeys?=';\nimport TypeError from '.TypeError';\nimport UNDEFINED from '.undefined';\nimport test from '.RegExp.prototype.test';\nimport isRegExp from '.class.isRegExp';\nimport Null_prototype from '.null.prototype';\n\nvar Object_is = ( Object                                      ).is;\nvar _INFINITY = -INFINITY;\n\nvar VOID = { 'void': function (value     )          { return value===VOID; } }['void'];\nexport { VOID as void };\n\nexport function any (value     )          { return value!==VOID; }\nexport function never (value     )          { return false; }\n\nexport function bigint (value     )          { return typeof value==='bigint'; }\nvar bigint_ = { '!bigint': function (value     )          { return typeof value!=='bigint'; } }['!bigint'];\nexport function symbol (value     )          { return typeof value==='symbol'; }\nvar symbol_ = { '!symbol': function (value     )          { return typeof value!=='symbol'; } }['!symbol'];\nexport function string (value     )          { return typeof value==='string'; }\nvar string_ = { '!string': function (value     )          { return typeof value!=='string'; } }['!string'];\nvar BOOLEAN = { 'boolean': function (value     )          { return value===true || value===false; } }['boolean'];\nexport { BOOLEAN as boolean };\nvar boolean_ = { '!boolean': function (value     )          { return value!==true && value!==false; } }['!boolean'];\nexport function number (value     )          { return typeof value==='number'; }\nvar number_ = { '!number': function (value     )          { return typeof value!=='number'; } }['!number'];\nexport function undefined (value     )          { return value===UNDEFINED; }\nvar undefined_ = { '!undefined': function (value     )          { return value!==UNDEFINED; } }['!undefined'];\n\nvar NULL = { 'null': function (value     )          { return value===null; } }['null'];\nvar NULL_ = { '!null': function (value     )          { return value!==null; } }['!null'];\nvar TRUE = { 'true': function (value     )          { return value===true; } }['true'];\nvar TRUE_ = { '!true': function (value     )          { return value!==true; } }['!true'];\nvar FALSE = { 'false': function (value     )          { return value===false; } }['false'];\nvar FALSE_ = { '!false': function (value     )          { return value!==false; } }['!false'];\n\nexport function Infinity (value     )          { return value===INFINITY; }\nInfinity.valueOf = function (                     )         { return INFINITY; };\nvar Infinity_ = { '!Infinity': function (value     )          { return value!==INFINITY; } }['!Infinity'];\nvar _Infinity = { '-Infinity': function (value     )          { return value===_INFINITY; } }['-Infinity'];\nvar _Infinity_ = { '!-Infinity': function (value     )          { return value!==_INFINITY; } }['!-Infinity'];\n\nexport function NaN (value     )          { return value!==value; }\nvar NaN_ = { '!NaN': function (value     )          { return value===value; } }['!NaN'];\n\nvar O            = Object_is\n\t? function O (value     )          { return Object_is (value, 0); }\n\t: function O (value     )          { return value===0 && 1/value>0; };\nvar O_            = Object_is\n\t? function O_ (value     )          { return !Object_is (value, 0); }\n\t: function O_ (value     )          { return value!==0 || 1/value<0; };\nvar _O            = Object_is\n\t? function _O (value     )          { return Object_is (value, -0); }\n\t: function _O (value     )          { return value===0 && 1/value<0; };\nvar _O_            = Object_is\n\t? function _O_ (value     )          { return !Object_is (value, -0); }\n\t: function _O_ (value     )          { return value!==0 || 1/value>0; };\n\nfunction StringTester (type        , strict         , TRUE         )            {\n\treturn strict\n\t\t? TRUE\n\t\t\t? function tester (value     )          { return typeof value==='string' && test.call(type, value); }\n\t\t\t: function tester (value     )          { return typeof value!=='string' || !test.call(type, value); }\n\t\t: TRUE\n\t\t\t? function tester (value     )          { return test.call(type, value); }\n\t\t\t: function tester (value     )          { return !test.call(type, value); };\n}\n\nfunction ObjectValidator                   (type   , strict         , FALSE         )            {\n\tvar expectKeys = ownKeys(type).reverse();\n\tvar expectLength         = expectKeys.length;\n\tvar validators = create(Null_prototype)                                   ;\n\tfor ( var index         = expectLength; index; ) {\n\t\tvar key = expectKeys[--index];\n\t\tvalidators[key] = is(type[key]);\n\t}\n\tvar TRUE          = !FALSE;\n\treturn function object (value     )          {\n\t\tif ( typeof value!=='object' || !value || isArray(value) ) { return FALSE; }\n\t\tfor ( var index         = expectLength; index; ) {\n\t\t\tvar key = expectKeys[--index];\n\t\t\tif ( !validators[key](key in value ? value[key] : VOID) ) { return FALSE; }\n\t\t}\n\t\tif ( strict ) {\n\t\t\tindex = 0;\n\t\t\tfor ( var keys = ownKeys(value), length         = keys.length; index<length; ++index ) {\n\t\t\t\tif ( !( keys[index] in validators ) ) { return FALSE; }\n\t\t\t}\n\t\t}\n\t\treturn TRUE;\n\t};\n}\n\nfunction ArrayValidator (type                 , like         , FALSE         )            {\n\tvar length         = type.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(is(type[index])); }\n\tvar TRUE          = !FALSE;\n\treturn function array (value     )          {\n\t\tif ( !like && !isArray(value) ) { return FALSE; }\n\t\tif ( value.length!==length ) { return FALSE; }\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( !validators[index](value[index]) ) { return FALSE; }\n\t\t}\n\t\treturn TRUE;\n\t};\n}\n\nexport function is (type     )            {\n\treturn typeof type==='function' ? type :\n\t\tundefined(type) ? undefined :\n\t\t\tTRUE(type) ? TRUE : FALSE(type) ? FALSE :\n\t\t\t\tNULL(type) ? NULL :\n\t\t\t\t\ttypeof type==='object' ?\n\t\t\t\t\t\t/*#__PURE__*/ isArray(type) ? ArrayValidator(type, false, false) :\n\t\t\t\t\t\tisRegExp(type) ? /*#__PURE__*/ StringTester(type, false, true) :\n\t\t\t\t\t\t\tObjectValidator(type, false, false) :\n\t\t\t\t\t\tO(type) ? O : _O(type) ? _O :\n\t\t\t\t\t\t\ttype!==type ? NaN :\n\t\t\t\t\t\t\t\ttype===INFINITY ? Infinity : type===_INFINITY ? _Infinity :\n\t\t\t\t\t\t\t\t\tfunction isType (value     )          { return value===type; };\n}\nexport function not (type     )            {\n\tif ( typeof type==='function' ) {\n\t\tswitch ( type ) {\n\t\t\tcase bigint:\n\t\t\t\treturn bigint_;\n\t\t\tcase symbol:\n\t\t\t\treturn symbol_;\n\t\t\tcase string:\n\t\t\t\treturn string_;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn boolean_;\n\t\t\tcase number:\n\t\t\t\treturn number_;\n\t\t\tcase undefined:\n\t\t\t\treturn undefined_;\n\t\t\tcase Infinity:\n\t\t\t\treturn Infinity_;\n\t\t}\n\t\treturn function notType (value     )          { return !type(value); };\n\t}\n\treturn type===UNDEFINED ? undefined_ :\n\t\ttype===true ? TRUE_ : type===false ? FALSE_ :\n\t\t\ttype===null ? NULL_ :\n\t\t\t\ttypeof type==='object' ?\n\t\t\t\t\tisArray(type) ? /*#__PURE__*/ ArrayValidator(type, false, true) :\n\t\t\t\t\t\tisRegExp(type) ? /*#__PURE__*/ StringTester(type, false, false) :\n\t\t\t\t\t\t\t/*#__PURE__*/ ObjectValidator(type, false, true) :\n\t\t\t\t\ttype===0 ? O_(type) ? _O_ : O_ :\n\t\t\t\t\t\ttype!==type ? NaN_ :\n\t\t\t\t\t\t\ttype===INFINITY ? Infinity_ : type===_INFINITY ? _Infinity_ :\n\t\t\t\t\t\t\t\tfunction notType (value     )          { return value!==type; };\n}\n\nexport function strict (type        )            {\n\tif ( isRegExp(type) ) { return /*#__PURE__*/ StringTester(type, true, true); }\n\tif ( isArray(type) ) { throw TypeError('strict(argument can not be an array)'); }\n\treturn /*#__PURE__*/ ObjectValidator(type, true, false);\n}\nstrict.not = function strict_not (type        )            {\n\tif ( isRegExp(type) ) { return /*#__PURE__*/ StringTester(type, true, false); }\n\tif ( isArray(type) ) { throw TypeError('strict.not(argument can not be an array)'); }\n\treturn /*#__PURE__*/ ObjectValidator(type, true, true);\n};\n\nexport function optional (type     )            {\n\tvar validator            = is(type);\n\treturn function optionalValidator (value     )          { return value===VOID || validator(value); };\n}\n\nexport function or (type     )            {\n\tvar types                                           = arguments.length===1 && isArray(type) ? type : arguments;\n\tvar length         = types.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(is(types[index])); }\n\treturn function or (value     )          {\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( validators[index](value) ) { return true; }\n\t\t}\n\t\treturn false;\n\t};\n}\nexport function and (type     )            {\n\tvar types                                           = arguments.length===1 && isArray(type) ? type : arguments;\n\tvar length         = types.length;\n\tvar validators              = [];\n\tfor ( var index         = 0; index<length; ++index ) { validators.push(is(types[index])); }\n\treturn function and (value     )          {\n\t\tfor ( var index         = 0; index<length; ++index ) {\n\t\t\tif ( !validators[index](value) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport function every (type     )            {\n\tvar validator            = is(type);\n\treturn function array (value     )          {\n\t\tif ( !isArray(value) ) { return false; }\n\t\tfor ( var length         = value.length, index         = 0; index<length; ++index ) {\n\t\t\tif ( !validator(value[index]) ) { return false; }\n\t\t}\n\t\treturn true;\n\t};\n}\n\nimport Default from '.default?=';\nexport default Default({\n\tis: is, not: not,\n\tand: and, or: or,\n\tbigint: bigint, symbol: symbol, string: string, 'boolean': BOOLEAN, number: number,\n\tundefined: undefined, NaN: NaN, Infinity: Infinity,\n\tevery: every,\n\t'void': VOID, optional: optional, strict: strict,\n\tany: any, never: never,\n\tversion: version\n});\n\n                                         "
		],
	"names":
		["Object_is","is","VOID","value","bigint","bigint_","symbol","symbol_","string","string_","BOOLEAN","boolean_","number","number_","undefined","undefined_","NULL","NULL_","TRUE","TRUE_","FALSE","FALSE_","Infinity","valueOf","Infinity_","_Infinity","_Infinity_","NaN","NaN_","O","O_","_O","_O_","StringTester","type","strict","test","call","ObjectValidator","expectKeys","ownKeys","reverse","expectLength","length","validators","create","Null_prototype","index","key","isArray","keys","ArrayValidator","like","push","isRegExp","TypeError","not","Default","and","types","arguments","or","boolean","every","validator","void","optional","any","never","version"],
	"mappings":
		"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"
}